version: "3.8"

x-deploy: &default-deploy
  replicas: 1
  restart_policy:
    condition: on-failure

x-deploy-manager: &default-deploy-manager
  <<: *default-deploy
  placement:
    constraints:
      - "node.role==manager"

x-deploy-worker: &default-deploy-worker
  <<: *default-deploy
  placement:
    constraints:
      - "node.role==worker"

services:
  visualizer:
    image: dockersamples/visualizer:latest
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "80:8080"
    deploy: *default-deploy-manager

  sparkmaster:
    image: spark_image
    ports:
      - "4040:4040"
      - "7077:7077"
      - "8080:8080"
    environment:
      - SPARK_ROLE=master
    deploy: *default-deploy-manager
    networks:
      - spark

  sparkworker:
    image: spark_image
    entrypoint: dockerize -wait tcp://sparkmaster:7077 -timeout 240s /sbin/my_init
    ports:
      - "8081:8081"
      - "41352:41352"
    environment:
      - SPARK_MASTER=sparkmaster
      - SPARK_ROLE=slave
    deploy: *default-deploy-worker
    networks:
      - spark

  helloworld:
    image: helloworld_image
    ports:
      - "5005:5005"
      - "41100:41100"
    depends_on:
      - sparkmaster
      - sparkworker
    deploy: *default-deploy-worker
    networks:
      - spark

networks:
  spark: